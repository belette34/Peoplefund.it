<?php

// Include abstract model
require_once(APPPATH.'core/base_model.php');

class Partners_model extends Base_Model {

	// Count partners
	public function count_partners($where = array()){
		
		// Generate where clause
        $where = self::where_string_from_array($where);
		
		// Get total emails
		$result = $this->db->query("SELECT * FROM `partners` $where")->num_rows();

		// Return results
		return $result;
	}

    // Get all partners
    public function get_partners($where = array(), $limit = array()) {

        $where = self::where_string_from_array($where);
		
		// Get total partners
		$result = $this->db->query("SELECT * FROM `partners` $where ORDER BY `order` ASC")->result();

		// Return results
		return $result;
    }
	

	// Add new Partner
	public function add_partner($data){
		$this->db->insert('partners', $data); 
		
		$this->save_cache_file();
	}
	
	
	// Save Partner
	public function save_partner($data, $id){
		$this->db->where('idpartner', $id);
		$this->db->update('partners', $data); 
	
		$this->save_cache_file();
	}
	
	// Delete user
	public function delete_partner($idpartner){
		$this->db->delete('partners', array('idpartner' => $idpartner)); 
		
		$this->save_cache_file();
	}
	
	
	// Move Partner
	public function sort($id, $direction){
		
		// Get current category data
		$data = $this->db->query("SELECT * FROM `partners` WHERE idpartner = $id LIMIT 1")->result();
		$data = reset( $data );
		$now = $data->order;
		
		// Move down
		if($direction == 'down'){
			$tmp = $this->db->query("SELECT `order` FROM partners WHERE `order` > '$now' ORDER BY `order` ASC LIMIT 1")->result();

			if(!empty($tmp[0])){
				$next = $tmp[0]->order;
				$this->db->query("UPDATE partners SET `order` = '$now' WHERE `order` = '$next' ");
				$this->db->query("UPDATE partners SET `order` = '$next' WHERE idpartner = '$id'");
			}
			
		// Move up
		} else {
			$tmp = $this->db->query("SELECT `order` FROM partners WHERE `order` < '$now' ORDER BY `order` DESC LIMIT 1")->result();
			
			if(!empty($tmp[0])){
				$next = $tmp[0]->order;
				$this->db->query("UPDATE partners SET `order` = '$now' WHERE `order` = '$next' ");
				$this->db->query("UPDATE partners SET `order` = '$next' WHERE idpartner = '$id' ");
			}
		}
		
		$this->save_cache_file();
	}	
	
	
	public function save_cache_file(){
		//Get all data
		$where = " WHERE `active` = 1 AND `image` != '' ";
		$sql = "SELECT * FROM `partners` $where ORDER BY `order` ASC";
		$items_arr = $this->db->query($sql)->result();
		
		$cache_file_contents = '<?php'."\n    //This cache file is automatically generated by the Administration -> Partners (Partners Model->saveCacheFile)\n";
		$cache_file_contents .= '    $footer_logos_arr = array();'."\n";
		
		foreach ($items_arr as $i => $item){
			$cache_file_contents .= '
				$footer_logos_temp_arr = array(
					\'title\' => \''.addslashes($item->title).'\',
					\'url\' => \''.addslashes($item->url).'\',
					\'image\' => \''.addslashes($item->image).'\'
				);
				$footer_logos_arr[] = $footer_logos_temp_arr;
			'."\n";
		}
		
		//Save all data to a cache file
		$cache_file_path = CACHE_DIR . "php_cached/footer_logos.php";
		file_put_contents($cache_file_path, $cache_file_contents);
		chmod($cache_file_path, 0777);
	}
}